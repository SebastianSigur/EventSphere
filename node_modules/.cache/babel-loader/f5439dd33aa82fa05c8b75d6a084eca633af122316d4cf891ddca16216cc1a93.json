{"ast":null,"code":"var _jsxFileName = \"/Users/sebastians/EventSphere/event-sphere-frontend/src/components/CountdownBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountdownBar = ({\n  time,\n  date\n}) => {\n  _s();\n  const newDate = date.split('-').reverse().join('-');\n  const targetDateTime = new Date(`${newDate}T${time}`);\n  const currentTime = new Date();\n  const [progress, setProgress] = useState(100);\n  const [timeRemainingText, setTimeRemainingText] = useState('');\n  useEffect(() => {\n    const totalTime = targetDateTime - currentTime;\n    const interval = setInterval(() => {\n      const remaining = Math.max(targetDateTime - new Date(), 0);\n      const timeRemaining = Math.max(remaining, 0);\n      const maxProgress = 100;\n      const minProgress = 1;\n      const newProgress = minProgress + (maxProgress - minProgress) * (1 - Math.pow(timeRemaining / totalTime, exponent));\n      setProgress(newProgress);\n      const secondsRemaining = Math.floor(timeRemaining / 1000);\n      const hours = Math.floor(secondsRemaining / 3600);\n      const minutes = Math.floor(secondsRemaining % 3600 / 60);\n      const seconds = secondsRemaining % 60;\n      setTimeRemainingText(`${hours}h ${minutes}m ${seconds}s`);\n      if (remaining === 0) {\n        clearInterval(interval);\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [targetDateTime, currentTime, exponent]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"countdown-bar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bar-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bar\",\n        style: {\n          width: `${progress}%`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-movement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-text\",\n          children: timeRemainingText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(CountdownBar, \"PvSj+7xXL2jP+CINu8qsYleftWo=\");\n_c = CountdownBar;\nexport default CountdownBar;\nvar _c;\n$RefreshReg$(_c, \"CountdownBar\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CountdownBar","time","date","_s","newDate","split","reverse","join","targetDateTime","Date","currentTime","progress","setProgress","timeRemainingText","setTimeRemainingText","totalTime","interval","setInterval","remaining","Math","max","timeRemaining","maxProgress","minProgress","newProgress","pow","exponent","secondsRemaining","floor","hours","minutes","seconds","clearInterval","className","children","style","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sebastians/EventSphere/event-sphere-frontend/src/components/CountdownBar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst CountdownBar = ({ time, date }) => {\n  const newDate = date.split('-').reverse().join('-');\n  const targetDateTime = new Date(`${newDate}T${time}`);\n  const currentTime = new Date();\n\n  const [progress, setProgress] = useState(100);\n  const [timeRemainingText, setTimeRemainingText] = useState('');\n  \n  useEffect(() => {\n    const totalTime = targetDateTime - currentTime;\n    const interval = setInterval(() => {\n      const remaining = Math.max(targetDateTime - new Date(), 0);\n      const timeRemaining = Math.max(remaining, 0);\n      \n      const maxProgress = 100;\n      const minProgress = 1;\n      const newProgress = minProgress + (maxProgress - minProgress) * (1 - Math.pow(timeRemaining / totalTime, exponent));\n\n      setProgress(newProgress);\n\n      const secondsRemaining = Math.floor(timeRemaining / 1000);\n      const hours = Math.floor(secondsRemaining / 3600);\n      const minutes = Math.floor((secondsRemaining % 3600) / 60);\n      const seconds = secondsRemaining % 60;\n\n      setTimeRemainingText(`${hours}h ${minutes}m ${seconds}s`);\n\n      if (remaining === 0) {\n        clearInterval(interval);\n      }\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [targetDateTime, currentTime, exponent]);\n\n  return (\n    <div className=\"countdown-bar\">\n      <div className=\"bar-container\">\n        <div className=\"bar\" style={{ width: `${progress}%` }}>\n          <div className=\"progress-movement\"></div>\n          <div className=\"progress-text\">{timeRemainingText}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CountdownBar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}