{"ast":null,"code":"var _jsxFileName = \"/Users/sebastians/EventSphere/event-sphere-frontend/src/components/CountdownBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountdownBar = ({\n  time,\n  date\n}) => {\n  _s();\n  const newDate = date.split('-').reverse().join('-');\n  const targetDateTime = new Date(`${newDate}T${time}`);\n  const currentTime = new Date();\n  const [progress, setProgress] = useState(100);\n  useEffect(() => {\n    const totalTime = targetDateTime - currentTime;\n    const interval = setInterval(() => {\n      const remaining = Math.max(targetDateTime - new Date(), 0);\n      const timeRemaining = Math.max(remaining, 0);\n\n      // Calculate logarithmic progress\n      const maxProgress = 100;\n      const minProgress = 1;\n      const newProgress = minProgress + (maxProgress - minProgress) * (1 - Math.log(timeRemaining + 1) / Math.log(totalTime + 1));\n      setProgress(newProgress);\n      if (remaining === 0) {\n        clearInterval(interval);\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [targetDateTime, currentTime]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"countdown-bar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bar\",\n      style: {\n        width: `${progress}%`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(CountdownBar, \"/7XgPcdmDrfoeiaNFvL1LEUveYc=\");\n_c = CountdownBar;\nexport default CountdownBar;\nvar _c;\n$RefreshReg$(_c, \"CountdownBar\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CountdownBar","time","date","_s","newDate","split","reverse","join","targetDateTime","Date","currentTime","progress","setProgress","totalTime","interval","setInterval","remaining","Math","max","timeRemaining","maxProgress","minProgress","newProgress","log","clearInterval","className","children","style","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sebastians/EventSphere/event-sphere-frontend/src/components/CountdownBar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst CountdownBar = ({ time, date }) => {\n  const newDate = date.split('-').reverse().join('-');\n  const targetDateTime = new Date(`${newDate}T${time}`);\n  const currentTime = new Date();\n\n  const [progress, setProgress] = useState(100);\n\n  useEffect(() => {\n    const totalTime = targetDateTime - currentTime;\n    const interval = setInterval(() => {\n      const remaining = Math.max(targetDateTime - new Date(), 0);\n      const timeRemaining = Math.max(remaining, 0);\n\n      // Calculate logarithmic progress\n      const maxProgress = 100;\n      const minProgress = 1;\n      const newProgress = minProgress + (maxProgress - minProgress) * (1 - Math.log(timeRemaining + 1) / Math.log(totalTime + 1));\n\n      setProgress(newProgress);\n\n      if (remaining === 0) {\n        clearInterval(interval);\n      }\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [targetDateTime, currentTime]);\n\n  return (\n    <div className=\"countdown-bar\">\n      <div className=\"bar\" style={{ width: `${progress}%` }}></div>\n    </div>\n  );\n};\n\nexport default CountdownBar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,YAAY,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAMC,OAAO,GAAGF,IAAI,CAACG,KAAK,CAAC,GAAG,CAAC,CAACC,OAAO,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;EACnD,MAAMC,cAAc,GAAG,IAAIC,IAAI,CAAE,GAAEL,OAAQ,IAAGH,IAAK,EAAC,CAAC;EACrD,MAAMS,WAAW,GAAG,IAAID,IAAI,CAAC,CAAC;EAE9B,MAAM,CAACE,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,GAAG,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACd,MAAMgB,SAAS,GAAGL,cAAc,GAAGE,WAAW;IAC9C,MAAMI,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC,MAAMC,SAAS,GAAGC,IAAI,CAACC,GAAG,CAACV,cAAc,GAAG,IAAIC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;MAC1D,MAAMU,aAAa,GAAGF,IAAI,CAACC,GAAG,CAACF,SAAS,EAAE,CAAC,CAAC;;MAE5C;MACA,MAAMI,WAAW,GAAG,GAAG;MACvB,MAAMC,WAAW,GAAG,CAAC;MACrB,MAAMC,WAAW,GAAGD,WAAW,GAAG,CAACD,WAAW,GAAGC,WAAW,KAAK,CAAC,GAAGJ,IAAI,CAACM,GAAG,CAACJ,aAAa,GAAG,CAAC,CAAC,GAAGF,IAAI,CAACM,GAAG,CAACV,SAAS,GAAG,CAAC,CAAC,CAAC;MAE3HD,WAAW,CAACU,WAAW,CAAC;MAExB,IAAIN,SAAS,KAAK,CAAC,EAAE;QACnBQ,aAAa,CAACV,QAAQ,CAAC;MACzB;IACF,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMU,aAAa,CAACV,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACN,cAAc,EAAEE,WAAW,CAAC,CAAC;EAEjC,oBACEX,OAAA;IAAK0B,SAAS,EAAC,eAAe;IAAAC,QAAA,eAC5B3B,OAAA;MAAK0B,SAAS,EAAC,KAAK;MAACE,KAAK,EAAE;QAAEC,KAAK,EAAG,GAAEjB,QAAS;MAAG;IAAE;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC;AAEV,CAAC;AAAC7B,EAAA,CAjCIH,YAAY;AAAAiC,EAAA,GAAZjC,YAAY;AAmClB,eAAeA,YAAY;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}