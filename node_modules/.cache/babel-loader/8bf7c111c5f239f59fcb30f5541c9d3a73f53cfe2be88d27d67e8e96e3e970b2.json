{"ast":null,"code":"var _jsxFileName = \"/Users/sebastians/EventSphere/event-sphere-frontend/src/features/users/userHome.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useGetUsersQuery } from './UserApiSlice';\nimport { useParams } from 'react-router-dom';\nimport EventsList from '../events/EventsList';\nimport useAuth from \"../../hooks/useAuth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nim;\nconst UserHome = () => {\n  _s();\n  const {\n    id: loggedInUserId\n  } = useAuth();\n  const {\n    id\n  } = useParams();\n  console.log(\"id: \", id);\n  const {\n    user\n  } = useGetUsersQuery(\"usersList\", {\n    selectFromResult: ({\n      data\n    }) => ({\n      user: data === null || data === void 0 ? void 0 : data.entities[id]\n    })\n  });\n  const [updateUser, {\n    isLoading,\n    isSuccess,\n    isError,\n    error\n  }] = useUpdateUserMutation();\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedAbout, setEditedAbout] = useState(user === null || user === void 0 ? void 0 : user.about);\n  const handleEditClick = () => {\n    setIsEditing(true);\n  };\n  const handleSaveClick = () => {\n    // Perform the saving logic here with editedAbout\n    setIsEditing(false);\n  };\n\n  // Check if id matches loggedInUserId\n  const isCurrentUser = id === loggedInUserId;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-info-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-profile\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: user === null || user === void 0 ? void 0 : user.img,\n          alt: \"User Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: user === null || user === void 0 ? void 0 : user.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-about\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"About Me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: editedAbout,\n            onChange: e => setEditedAbout(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSaveClick,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: (user === null || user === void 0 ? void 0 : user.about.length) > 100 ? (user === null || user === void 0 ? void 0 : user.about.substring(0, 100)) + '...' : user === null || user === void 0 ? void 0 : user.about\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), isCurrentUser && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleEditClick,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-events\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Public Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EventsList, {\n        userId: id,\n        isPublic: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(UserHome, \"DYqY2UzgbHzmY148dsY5b1nrA7Q=\", true, function () {\n  return [useAuth, useParams, useGetUsersQuery];\n});\n_c = UserHome;\nexport default UserHome;\nvar _c;\n$RefreshReg$(_c, \"UserHome\");","map":{"version":3,"names":["React","useState","useGetUsersQuery","useParams","EventsList","useAuth","jsxDEV","_jsxDEV","im","UserHome","_s","id","loggedInUserId","console","log","user","selectFromResult","data","entities","updateUser","isLoading","isSuccess","isError","error","useUpdateUserMutation","isEditing","setIsEditing","editedAbout","setEditedAbout","about","handleEditClick","handleSaveClick","isCurrentUser","className","children","src","img","alt","fileName","_jsxFileName","lineNumber","columnNumber","username","value","onChange","e","target","onClick","length","substring","userId","isPublic","_c","$RefreshReg$"],"sources":["/Users/sebastians/EventSphere/event-sphere-frontend/src/features/users/userHome.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useGetUsersQuery } from './UserApiSlice';\nimport { useParams } from 'react-router-dom';\nimport EventsList from '../events/EventsList';\nimport useAuth from \"../../hooks/useAuth\";\nim\nconst UserHome = () => {\n    const { id: loggedInUserId } = useAuth();\n\n    const { id } = useParams();\n    console.log(\"id: \", id);\n    const { user } = useGetUsersQuery(\"usersList\", {\n        selectFromResult: ({ data }) => ({\n            user: data?.entities[id]\n        }),\n    });\n\n\n\n    const [updateUser, {\n        isLoading,\n        isSuccess,\n        isError,\n        error\n    }] = useUpdateUserMutation()\n\n\n    const [isEditing, setIsEditing] = useState(false);\n    const [editedAbout, setEditedAbout] = useState(user?.about);\n\n    const handleEditClick = () => {\n        setIsEditing(true);\n    };\n\n    const handleSaveClick = () => {\n        // Perform the saving logic here with editedAbout\n        setIsEditing(false);\n    };\n    \n    // Check if id matches loggedInUserId\n    const isCurrentUser = id === loggedInUserId;\n\n    return (\n        <div className=\"user-container\">\n            <div className=\"user-info-container\">\n                <div className=\"user-profile\">\n                    <img src={user?.img} alt=\"User Profile\" />\n                    <h2>{user?.username}</h2>\n                </div>\n                <div className=\"user-about\">\n                    <h3>About Me</h3>\n                    {isEditing ? (\n                        <div>\n                            <textarea\n                                value={editedAbout}\n                                onChange={(e) => setEditedAbout(e.target.value)}\n                            />\n                            <button onClick={handleSaveClick}>Save</button>\n                        </div>\n                    ) : (\n                        <div>\n                            <p>\n                                {user?.about.length > 100\n                                    ? user?.about.substring(0, 100) + '...'\n                                    : user?.about}\n                            </p>\n                            {isCurrentUser && (\n                                <button onClick={handleEditClick}>Edit</button>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n            <div className=\"user-events\">\n                <h3>Public Events</h3>\n                <EventsList userId={id} isPublic={true} />\n            </div>\n        </div>\n    );\n};\n\nexport default UserHome;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}