{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { apiSlice } from './api/apiSlice';\nimport { setupListeners } from \"@reduxjs/toolkit/query\";\nimport authReducer from '../features/auth/authSlice';\nexport const store = configureStore({\n  reducer: {\n    [apiSlice.reducerPath]: apiSlice.reducer,\n    auth: authReducer,\n    filter: filterReducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(apiSlice.middleware),\n  devTools: true\n});\nsetupListeners(store.dispatch);","map":{"version":3,"names":["configureStore","apiSlice","setupListeners","authReducer","store","reducer","reducerPath","auth","filter","filterReducer","middleware","getDefaultMiddleware","concat","devTools","dispatch"],"sources":["/Users/sebastians/EventSphere/event-sphere-frontend/src/app/store.js"],"sourcesContent":["import  { configureStore } from '@reduxjs/toolkit'\nimport { apiSlice } from './api/apiSlice'\nimport { setupListeners } from \"@reduxjs/toolkit/query\"\nimport authReducer from '../features/auth/authSlice'\nexport const store = configureStore({\n    reducer: {\n        [apiSlice.reducerPath]: apiSlice.reducer,\n        auth: authReducer,\n        filter: filterReducer,\n    },\n    middleware: getDefaultMiddleware => \n        getDefaultMiddleware().concat(apiSlice.middleware),\n    devTools: true\n})\n\nsetupListeners(store.dispatch) "],"mappings":"AAAA,SAAUA,cAAc,QAAQ,kBAAkB;AAClD,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,cAAc,QAAQ,wBAAwB;AACvD,OAAOC,WAAW,MAAM,4BAA4B;AACpD,OAAO,MAAMC,KAAK,GAAGJ,cAAc,CAAC;EAChCK,OAAO,EAAE;IACL,CAACJ,QAAQ,CAACK,WAAW,GAAGL,QAAQ,CAACI,OAAO;IACxCE,IAAI,EAAEJ,WAAW;IACjBK,MAAM,EAAEC;EACZ,CAAC;EACDC,UAAU,EAAEC,oBAAoB,IAC5BA,oBAAoB,CAAC,CAAC,CAACC,MAAM,CAACX,QAAQ,CAACS,UAAU,CAAC;EACtDG,QAAQ,EAAE;AACd,CAAC,CAAC;AAEFX,cAAc,CAACE,KAAK,CAACU,QAAQ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}