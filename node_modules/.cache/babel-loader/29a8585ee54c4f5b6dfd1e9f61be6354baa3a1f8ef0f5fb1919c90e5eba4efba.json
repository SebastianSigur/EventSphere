{"ast":null,"code":"var _jsxFileName = \"/Users/sebastians/EventSphere/event-sphere-frontend/src/features/users/userHome.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useGetUsersQuery } from './UserApiSlice';\nimport { useParams } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'; // Import FontAwesomeIcon\nimport { faEdit } from '@fortawesome/free-solid-svg-icons'; // Import the edit icon\nimport EventsList from '../events/EventsList';\nimport useAuth from \"../../hooks/useAuth\";\nimport { useUpdateUserMutation } from './UserApiSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserHome = () => {\n  _s();\n  const {\n    id: loggedInUserId\n  } = useAuth();\n  const {\n    id\n  } = useParams();\n  console.log(\"id: \", id);\n  const {\n    user\n  } = useGetUsersQuery(\"usersList\", {\n    selectFromResult: ({\n      data\n    }) => ({\n      user: data === null || data === void 0 ? void 0 : data.entities[id]\n    })\n  });\n  const [updateUser, {\n    isLoading,\n    isSuccess,\n    isError,\n    error\n  }] = useUpdateUserMutation();\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedAbout, setEditedAbout] = useState(user === null || user === void 0 ? void 0 : user.about);\n  const [showImageModal, setShowImageModal] = useState(false); // State for showing image modal\n  const [selectedImage, setSelectedImage] = useState(null); // State for the selected image\n\n  const handleEditClick = () => {\n    setIsEditing(true);\n  };\n  const handleSaveClick = async () => {\n    setIsEditing(false);\n    await updateUser({\n      id: user.id,\n      username: user.username,\n      password: user.password,\n      roles: user.roles,\n      active: user.active,\n      img: user.img,\n      about: editedAbout\n    });\n  };\n  const handleImageClick = () => {\n    // Open the image modal\n    setShowImageModal(true);\n  };\n  const handleImageUpload = image => {\n    // Logic to handle image upload\n    setSelectedImage(image);\n    setShowImageModal(false); // Close the modal after selecting an image\n  };\n\n  // Check if id matches loggedInUserId\n  const isCurrentUser = id === loggedInUserId;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-info-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-profile\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `profile-image ${isCurrentUser && \"editable\"}`,\n          onClick: isCurrentUser ? handleImageClick : undefined,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: selectedImage || (user === null || user === void 0 ? void 0 : user.img),\n            alt: \"User Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), isCurrentUser && /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faEdit,\n            className: \"edit-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: user === null || user === void 0 ? void 0 : user.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-about\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n_s(UserHome, \"K3cAooe2ezVbgdk2glX+q9Hy9Lc=\", false, function () {\n  return [useAuth, useParams, useGetUsersQuery, useUpdateUserMutation];\n});\n_c = UserHome;\nexport default UserHome;\nvar _c;\n$RefreshReg$(_c, \"UserHome\");","map":{"version":3,"names":["React","useState","useGetUsersQuery","useParams","FontAwesomeIcon","faEdit","EventsList","useAuth","useUpdateUserMutation","jsxDEV","_jsxDEV","UserHome","_s","id","loggedInUserId","console","log","user","selectFromResult","data","entities","updateUser","isLoading","isSuccess","isError","error","isEditing","setIsEditing","editedAbout","setEditedAbout","about","showImageModal","setShowImageModal","selectedImage","setSelectedImage","handleEditClick","handleSaveClick","username","password","roles","active","img","handleImageClick","handleImageUpload","image","isCurrentUser","className","children","onClick","undefined","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","icon","_c","$RefreshReg$"],"sources":["/Users/sebastians/EventSphere/event-sphere-frontend/src/features/users/userHome.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useGetUsersQuery } from './UserApiSlice';\nimport { useParams } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'; // Import FontAwesomeIcon\nimport { faEdit } from '@fortawesome/free-solid-svg-icons'; // Import the edit icon\nimport EventsList from '../events/EventsList';\nimport useAuth from \"../../hooks/useAuth\";\nimport { useUpdateUserMutation } from './UserApiSlice';\n\nconst UserHome = () => {\n    const { id: loggedInUserId } = useAuth();\n\n    const { id } = useParams();\n    console.log(\"id: \", id);\n    const { user } = useGetUsersQuery(\"usersList\", {\n        selectFromResult: ({ data }) => ({\n            user: data?.entities[id]\n        }),\n    });\n\n    const [updateUser, {\n        isLoading,\n        isSuccess,\n        isError,\n        error\n    }] = useUpdateUserMutation()\n\n    const [isEditing, setIsEditing] = useState(false);\n    const [editedAbout, setEditedAbout] = useState(user?.about);\n    const [showImageModal, setShowImageModal] = useState(false); // State for showing image modal\n    const [selectedImage, setSelectedImage] = useState(null); // State for the selected image\n\n    const handleEditClick = () => {\n        setIsEditing(true);\n    };\n\n    const handleSaveClick = async () => {\n        setIsEditing(false);\n        await updateUser({\n            id: user.id,\n            username: user.username,\n            password: user.password,\n            roles: user.roles,\n            active: user.active,\n            img: user.img,\n            about: editedAbout\n        })\n    };\n\n    const handleImageClick = () => {\n        // Open the image modal\n        setShowImageModal(true);\n    };\n\n    const handleImageUpload = (image) => {\n        // Logic to handle image upload\n        setSelectedImage(image);\n        setShowImageModal(false); // Close the modal after selecting an image\n    };\n\n    // Check if id matches loggedInUserId\n    const isCurrentUser = id === loggedInUserId;\n\n    return (\n        <div className=\"user-container\">\n            <div className=\"user-info-container\">\n                <div className=\"user-profile\">\n                    <div\n                        className={`profile-image ${isCurrentUser && \"editable\"}`}\n                        onClick={isCurrentUser ? handleImageClick : undefined}\n                    >\n                        <img src={selectedImage || user?.img} alt=\"User Profile\" />\n                        {isCurrentUser && <FontAwesomeIcon icon={faEdit} className=\"edit-icon\" />}\n                    </div>\n                    <h2>{user?.username}</h2>\n                </div>\n                <div className=\"user-about\">\n                    {/* Rest of the component remains the same */}\n                </div>\n            </div>\n            {/* Rest of the component remains the same */}\n        </div>\n    );\n};\n\nexport default UserHome;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}