{"ast":null,"code":"var _jsxFileName = \"/Users/sebastians/EventSphere/event-sphere-frontend/src/features/events/EventsList.js\",\n  _s = $RefreshSig$();\nimport { useGetEventsQuery } from \"./EventApiSlice\";\nimport EventMini from \"./eventMini\";\nimport PulseLoader from 'react-spinners/PulseLoader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventsList = props => {\n  _s();\n  var _error$data;\n  userI;\n  const {\n    data: events,\n    isLoading,\n    isSuccess,\n    isError,\n    error\n  } = useGetEventsQuery('eventsList', {\n    pollingInterval: 60 * 1000,\n    refetchOnFocus: true,\n    refetchOnMountOrArgChange: true\n  });\n  let content;\n  if (isLoading) content = /*#__PURE__*/_jsxDEV(PulseLoader, {\n    color: '#FFF'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 30\n  }, this);\n  if (isError) content = /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"errmsg\",\n    children: error === null || error === void 0 ? void 0 : (_error$data = error.data) === null || _error$data === void 0 ? void 0 : _error$data.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 28\n  }, this);\n  if (isSuccess) {\n    const sortedIdsByLikes = events.ids.slice().sort((a, b) => events.entities[b].likes - events.entities[a].likes);\n    const {\n      ids\n    } = events;\n    const events_list = sortedIdsByLikes.map(eventId => /*#__PURE__*/_jsxDEV(EventMini, {\n      event: events === null || events === void 0 ? void 0 : events.entities[eventId]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 61\n    }, this));\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-list\",\n      children: events_list\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n  return content;\n};\n_s(EventsList, \"1Aii1snl6DUxlcMQjmS61+NOKUg=\", false, function () {\n  return [useGetEventsQuery];\n});\n_c = EventsList;\nexport default EventsList;\nvar _c;\n$RefreshReg$(_c, \"EventsList\");","map":{"version":3,"names":["useGetEventsQuery","EventMini","PulseLoader","jsxDEV","_jsxDEV","EventsList","props","_s","_error$data","userI","data","events","isLoading","isSuccess","isError","error","pollingInterval","refetchOnFocus","refetchOnMountOrArgChange","content","color","fileName","_jsxFileName","lineNumber","columnNumber","className","children","message","sortedIdsByLikes","ids","slice","sort","a","b","entities","likes","events_list","map","eventId","event","_c","$RefreshReg$"],"sources":["/Users/sebastians/EventSphere/event-sphere-frontend/src/features/events/EventsList.js"],"sourcesContent":["import { useGetEventsQuery } from \"./EventApiSlice\";\nimport EventMini from \"./eventMini\";\nimport PulseLoader from 'react-spinners/PulseLoader'\n\n\nconst EventsList = (props) => {\n\n    userI\n    const {\n        data: events,\n        isLoading,\n        isSuccess,\n        isError,\n        error\n    } = useGetEventsQuery('eventsList', {\n        pollingInterval: 60*1000 ,\n        refetchOnFocus: true,\n        refetchOnMountOrArgChange: true,\n    })\n    let content\n\n    if (isLoading) content = <PulseLoader color={'#FFF'} />\n    if (isError) content = <p className=\"errmsg\">{error?.data?.message}</p>\n\n    if(isSuccess) {\n        \n        const sortedIdsByLikes = events.ids.slice().sort((a, b) => events.entities[b].likes - events.entities[a].likes);\n\n\n        const { ids } = events\n      \n        const events_list = sortedIdsByLikes.map(eventId => <EventMini event={events?.entities[eventId]}/>)\n        content = (\n            <div className=\"event-list\">\n                {events_list}\n            </div>\n        )\n\n    }\n    return content;\n\n}\n\nexport default EventsList"],"mappings":";;AAAA,SAASA,iBAAiB,QAAQ,iBAAiB;AACnD,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,WAAW,MAAM,4BAA4B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGpD,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAAA,IAAAC,WAAA;EAE1BC,KAAK;EACL,MAAM;IACFC,IAAI,EAAEC,MAAM;IACZC,SAAS;IACTC,SAAS;IACTC,OAAO;IACPC;EACJ,CAAC,GAAGf,iBAAiB,CAAC,YAAY,EAAE;IAChCgB,eAAe,EAAE,EAAE,GAAC,IAAI;IACxBC,cAAc,EAAE,IAAI;IACpBC,yBAAyB,EAAE;EAC/B,CAAC,CAAC;EACF,IAAIC,OAAO;EAEX,IAAIP,SAAS,EAAEO,OAAO,gBAAGf,OAAA,CAACF,WAAW;IAACkB,KAAK,EAAE;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EACvD,IAAIV,OAAO,EAAEK,OAAO,gBAAGf,OAAA;IAAGqB,SAAS,EAAC,QAAQ;IAAAC,QAAA,EAAEX,KAAK,aAALA,KAAK,wBAAAP,WAAA,GAALO,KAAK,CAAEL,IAAI,cAAAF,WAAA,uBAAXA,WAAA,CAAamB;EAAO;IAAAN,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAEvE,IAAGX,SAAS,EAAE;IAEV,MAAMe,gBAAgB,GAAGjB,MAAM,CAACkB,GAAG,CAACC,KAAK,CAAC,CAAC,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKtB,MAAM,CAACuB,QAAQ,CAACD,CAAC,CAAC,CAACE,KAAK,GAAGxB,MAAM,CAACuB,QAAQ,CAACF,CAAC,CAAC,CAACG,KAAK,CAAC;IAG/G,MAAM;MAAEN;IAAI,CAAC,GAAGlB,MAAM;IAEtB,MAAMyB,WAAW,GAAGR,gBAAgB,CAACS,GAAG,CAACC,OAAO,iBAAIlC,OAAA,CAACH,SAAS;MAACsC,KAAK,EAAE5B,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEuB,QAAQ,CAACI,OAAO;IAAE;MAAAjB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,CAAC;IACnGL,OAAO,gBACHf,OAAA;MAAKqB,SAAS,EAAC,YAAY;MAAAC,QAAA,EACtBU;IAAW;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CACR;EAEL;EACA,OAAOL,OAAO;AAElB,CAAC;AAAAZ,EAAA,CApCKF,UAAU;EAAA,QASRL,iBAAiB;AAAA;AAAAwC,EAAA,GATnBnC,UAAU;AAsChB,eAAeA,UAAU;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}