{"ast":null,"code":"var _jsxFileName = \"/Users/sebastians/EventSphere/event-sphere-frontend/src/features/auth/SignIn.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\";\nimport useTitle from \"../../hooks/useTitle\";\nimport { loginUser } from \"./authApiSlice\"; // Assuming you have an authentication API slice\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst USER_REGEX = /^[A-z]{3,20}$/;\nconst PWD_REGEX = /^[A-z0-9!@#$%]{4,12}$/;\nconst SignIn = () => {\n  _s();\n  const [addNewUser, {\n    isLoading,\n    isSuccess,\n    isError,\n    error\n  }] = useAddNewUserMutation();\n  const onSaveUserClicked = async e => {\n    e.preventDefault();\n    await addNewUser({\n      username,\n      password\n    });\n  };\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [validUsername, setValidUsername] = useState(false);\n  const [password, setPassword] = useState('');\n  const [validPassword, setValidPassword] = useState(false);\n  useEffect(() => {\n    setValidUsername(USER_REGEX.test(username));\n  }, [username]);\n  useEffect(() => {\n    setValidPassword(PWD_REGEX.test(password));\n  }, [password]);\n  const canSignIn = [validUsername, validPassword].every(Boolean);\n  const onUsernameChanged = e => setUsername(e.target.value);\n  const onPasswordChanged = e => setPassword(e.target.value);\n  const validUserClass = !validUsername ? 'form__input--incomplete' : '';\n  const validPwdClass = !validPassword ? 'form__input--incomplete' : '';\n  const content = /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form\",\n    onSubmit: onSaveUserClicked,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form__title-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form__action-buttons\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"icon-button\",\n          title: \"Sign In\",\n          disabled: !canSignIn,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faSave\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"form__label\",\n      htmlFor: \"username\",\n      children: [\"Username: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"nowrap\",\n        children: \"[3-20 letters]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: `form__input ${validUserClass}`,\n      id: \"username\",\n      name: \"username\",\n      type: \"text\",\n      autoComplete: \"off\",\n      value: username,\n      onChange: onUsernameChanged\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"form__label\",\n      htmlFor: \"password\",\n      children: [\"Password: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"nowrap\",\n        children: \"[4-12 chars incl. !@#$%]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: `form__input ${validPwdClass}`,\n      id: \"password\",\n      name: \"password\",\n      type: \"password\",\n      value: password,\n      onChange: onPasswordChanged\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n  return content;\n};\n_s(SignIn, \"LVUsGm2GEftVjpTe8zj6nQq9hhY=\", true, function () {\n  return [useNavigate];\n});\n_c = SignIn;\nexport default SignIn;\nvar _c;\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"names":["useState","useEffect","useNavigate","FontAwesomeIcon","faSave","useTitle","loginUser","jsxDEV","_jsxDEV","USER_REGEX","PWD_REGEX","SignIn","_s","addNewUser","isLoading","isSuccess","isError","error","useAddNewUserMutation","onSaveUserClicked","e","preventDefault","username","password","navigate","setUsername","validUsername","setValidUsername","setPassword","validPassword","setValidPassword","test","canSignIn","every","Boolean","onUsernameChanged","target","value","onPasswordChanged","validUserClass","validPwdClass","content","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","title","disabled","icon","htmlFor","id","name","type","autoComplete","onChange","_c","$RefreshReg$"],"sources":["/Users/sebastians/EventSphere/event-sphere-frontend/src/features/auth/SignIn.js"],"sourcesContent":["import { useState, useEffect } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSave } from \"@fortawesome/free-solid-svg-icons\"\nimport useTitle from \"../../hooks/useTitle\"\nimport { loginUser } from \"./authApiSlice\"  // Assuming you have an authentication API slice\n\nconst USER_REGEX = /^[A-z]{3,20}$/\nconst PWD_REGEX = /^[A-z0-9!@#$%]{4,12}$/\n\nconst SignIn = () => {\n    \n    const [addNewUser, {\n        isLoading,\n        isSuccess,\n        isError,\n        error\n    }] = useAddNewUserMutation()\n\n    const onSaveUserClicked = async (e) => {\n        e.preventDefault()\n        await addNewUser({ username, password })\n\n    }\n\n    const navigate = useNavigate()\n\n    const [username, setUsername] = useState('')\n    const [validUsername, setValidUsername] = useState(false)\n    const [password, setPassword] = useState('')\n    const [validPassword, setValidPassword] = useState(false)\n    \n\n    useEffect(() => {\n        setValidUsername(USER_REGEX.test(username))\n    }, [username])\n\n    useEffect(() => {\n        setValidPassword(PWD_REGEX.test(password))\n    }, [password])\n\n    const canSignIn = [validUsername, validPassword].every(Boolean)\n\n    const onUsernameChanged = e => setUsername(e.target.value)\n    const onPasswordChanged = e => setPassword(e.target.value)\n\n    const validUserClass = !validUsername ? 'form__input--incomplete' : ''\n    const validPwdClass = !validPassword ? 'form__input--incomplete' : ''\n\n    const content = (\n        <form className=\"form\" onSubmit={onSaveUserClicked}>\n            <div className=\"form__title-row\">\n                <h2>Sign In</h2>\n                <div className=\"form__action-buttons\">\n                    <button\n                        className=\"icon-button\"\n                        title=\"Sign In\"\n                        disabled={!canSignIn}\n                    >\n                        <FontAwesomeIcon icon={faSave} />\n                    </button>\n                </div>\n            </div>\n            <label className=\"form__label\" htmlFor=\"username\">\n                Username: <span className=\"nowrap\">[3-20 letters]</span></label>\n            <input\n                className={`form__input ${validUserClass}`}\n                id=\"username\"\n                name=\"username\"\n                type=\"text\"\n                autoComplete=\"off\"\n                value={username}\n                onChange={onUsernameChanged}\n            />\n\n            <label className=\"form__label\" htmlFor=\"password\">\n                Password: <span className=\"nowrap\">[4-12 chars incl. !@#$%]</span></label>\n            <input\n                className={`form__input ${validPwdClass}`}\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                value={password}\n                onChange={onPasswordChanged}\n            />\n        </form>\n    )\n\n    return content\n}\n\nexport default SignIn\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}