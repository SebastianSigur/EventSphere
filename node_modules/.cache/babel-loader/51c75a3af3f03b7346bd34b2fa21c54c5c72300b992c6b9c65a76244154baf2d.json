{"ast":null,"code":"var _jsxFileName = \"/Users/sebastians/EventSphere/event-sphere-frontend/src/features/users/People.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport useAuth from '../../hooks/useAuth';\nimport { useGetUsersQuery } from './UserApiSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nim;\nconst People = () => {\n  _s();\n  const {\n    data: users,\n    isLoading: usersLoading,\n    isSuccess: usersSuccess,\n    isError: usersError,\n    error: usersErrorData\n  } = useGetUsersQuery('usersList', {\n    pollingInterval: 60 * 1000,\n    refetchOnFocus: true,\n    refetchOnMountOrArgChange: true\n  });\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedUser, setSelectedUser] = useState(null);\n\n  // Function to accept a friend request\n  const acceptRequest = (user, requestId) => {\n    const updatedUsers = users.map(u => {\n      if (u.id === user.id) {\n        return {\n          ...u,\n          friends: [...u.friends, requestId],\n          requests: u.requests.filter(id => id !== requestId)\n        };\n      }\n      return u;\n    });\n    setUsers(updatedUsers);\n  };\n\n  // Function to reject a friend request\n  const rejectRequest = (user, requestId) => {\n    const updatedUsers = users.map(u => {\n      if (u.id === user.id) {\n        return {\n          ...u,\n          requests: u.requests.filter(id => id !== requestId)\n        };\n      }\n      return u;\n    });\n    setUsers(updatedUsers);\n  };\n\n  // Function to search for users\n  const searchUsers = query => {\n    setSearchQuery(query);\n    setSelectedUser(null); // Clear selected user\n  };\n\n  // Function to view a user's profile\n  const viewUserProfile = userId => {\n    const selected = users.find(user => user.id === userId);\n    setSelectedUser(selected);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Friend Requests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: user.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: user.img,\n        alt: user.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => acceptRequest(user, user.requests[0]),\n        children: \"Accept\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => rejectRequest(user, user.requests[0]),\n        children: \"Reject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, user.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Friends\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Search People\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search users...\",\n      value: searchQuery,\n      onChange: e => searchUsers(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), selectedUser && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [selectedUser.username, \"'s Profile\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 7\n  }, this);\n};\n_s(People, \"VdYbnUfMXNZAtdbkHEJLD/WXUn0=\", false, function () {\n  return [useGetUsersQuery];\n});\n_c = People;\nexport default People;\nvar _c;\n$RefreshReg$(_c, \"People\");","map":{"version":3,"names":["React","useState","useAuth","useGetUsersQuery","jsxDEV","_jsxDEV","im","People","_s","data","users","isLoading","usersLoading","isSuccess","usersSuccess","isError","usersError","error","usersErrorData","pollingInterval","refetchOnFocus","refetchOnMountOrArgChange","searchQuery","setSearchQuery","selectedUser","setSelectedUser","acceptRequest","user","requestId","updatedUsers","map","u","id","friends","requests","filter","setUsers","rejectRequest","searchUsers","query","viewUserProfile","userId","selected","find","children","fileName","_jsxFileName","lineNumber","columnNumber","username","src","img","alt","onClick","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/sebastians/EventSphere/event-sphere-frontend/src/features/users/People.js"],"sourcesContent":["import React, { useState } from 'react';\nimport useAuth from '../../hooks/useAuth';\nimport { useGetUsersQuery } from './UserApiSlice';\nim\n\nconst People = () => {\n\n    const {\n        data: users,\n        isLoading: usersLoading,\n        isSuccess: usersSuccess,\n        isError: usersError,\n        error: usersErrorData\n    } = useGetUsersQuery('usersList', {\n        pollingInterval: 60*1000,\n        refetchOnFocus: true,\n        refetchOnMountOrArgChange: true\n    })\n\n    const [searchQuery, setSearchQuery] = useState('');\n    const [selectedUser, setSelectedUser] = useState(null);\n  \n    // Function to accept a friend request\n    const acceptRequest = (user, requestId) => {\n      const updatedUsers = users.map(u => {\n        if (u.id === user.id) {\n          return {\n            ...u,\n            friends: [...u.friends, requestId],\n            requests: u.requests.filter(id => id !== requestId),\n          };\n        }\n        return u;\n      });\n      setUsers(updatedUsers);\n    };\n  \n    // Function to reject a friend request\n    const rejectRequest = (user, requestId) => {\n      const updatedUsers = users.map(u => {\n        if (u.id === user.id) {\n          return {\n            ...u,\n            requests: u.requests.filter(id => id !== requestId),\n          };\n        }\n        return u;\n      });\n      setUsers(updatedUsers);\n    };\n  \n    // Function to search for users\n    const searchUsers = query => {\n      setSearchQuery(query);\n      setSelectedUser(null); // Clear selected user\n    };\n  \n    // Function to view a user's profile\n    const viewUserProfile = userId => {\n      const selected = users.find(user => user.id === userId);\n      setSelectedUser(selected);\n    };\n  \n    return (\n      <div>\n        <h2>Friend Requests</h2>\n        {users.map(user => (\n          <div key={user.id}>\n            <h3>{user.username}</h3>\n            <img src={user.img} alt={user.username} />\n            <button onClick={() => acceptRequest(user, user.requests[0])}>Accept</button>\n            <button onClick={() => rejectRequest(user, user.requests[0])}>Reject</button>\n          </div>\n        ))}\n  \n        <h2>Friends</h2>\n        {/* Display the top 10 friends */}\n        {/* You can map through user.friends and display their info here */}\n  \n        <h2>Search People</h2>\n        <input\n          type=\"text\"\n          placeholder=\"Search users...\"\n          value={searchQuery}\n          onChange={e => searchUsers(e.target.value)}\n        />\n        {/* Display search results here */}\n        {/* You can map through filtered users and display their info */}\n        {selectedUser && (\n          <div>\n            <h2>{selectedUser.username}'s Profile</h2>\n            {/* Display selected user's info here */}\n          </div>\n        )}\n      </div>\n    );\n  };\n  \n  export default People;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,qBAAqB;AACzC,SAASC,gBAAgB,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAClDC,EAAE;AAEF,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEjB,MAAM;IACFC,IAAI,EAAEC,KAAK;IACXC,SAAS,EAAEC,YAAY;IACvBC,SAAS,EAAEC,YAAY;IACvBC,OAAO,EAAEC,UAAU;IACnBC,KAAK,EAAEC;EACX,CAAC,GAAGf,gBAAgB,CAAC,WAAW,EAAE;IAC9BgB,eAAe,EAAE,EAAE,GAAC,IAAI;IACxBC,cAAc,EAAE,IAAI;IACpBC,yBAAyB,EAAE;EAC/B,CAAC,CAAC;EAEF,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACuB,YAAY,EAAEC,eAAe,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;;EAEtD;EACA,MAAMyB,aAAa,GAAGA,CAACC,IAAI,EAAEC,SAAS,KAAK;IACzC,MAAMC,YAAY,GAAGnB,KAAK,CAACoB,GAAG,CAACC,CAAC,IAAI;MAClC,IAAIA,CAAC,CAACC,EAAE,KAAKL,IAAI,CAACK,EAAE,EAAE;QACpB,OAAO;UACL,GAAGD,CAAC;UACJE,OAAO,EAAE,CAAC,GAAGF,CAAC,CAACE,OAAO,EAAEL,SAAS,CAAC;UAClCM,QAAQ,EAAEH,CAAC,CAACG,QAAQ,CAACC,MAAM,CAACH,EAAE,IAAIA,EAAE,KAAKJ,SAAS;QACpD,CAAC;MACH;MACA,OAAOG,CAAC;IACV,CAAC,CAAC;IACFK,QAAQ,CAACP,YAAY,CAAC;EACxB,CAAC;;EAED;EACA,MAAMQ,aAAa,GAAGA,CAACV,IAAI,EAAEC,SAAS,KAAK;IACzC,MAAMC,YAAY,GAAGnB,KAAK,CAACoB,GAAG,CAACC,CAAC,IAAI;MAClC,IAAIA,CAAC,CAACC,EAAE,KAAKL,IAAI,CAACK,EAAE,EAAE;QACpB,OAAO;UACL,GAAGD,CAAC;UACJG,QAAQ,EAAEH,CAAC,CAACG,QAAQ,CAACC,MAAM,CAACH,EAAE,IAAIA,EAAE,KAAKJ,SAAS;QACpD,CAAC;MACH;MACA,OAAOG,CAAC;IACV,CAAC,CAAC;IACFK,QAAQ,CAACP,YAAY,CAAC;EACxB,CAAC;;EAED;EACA,MAAMS,WAAW,GAAGC,KAAK,IAAI;IAC3BhB,cAAc,CAACgB,KAAK,CAAC;IACrBd,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;EACzB,CAAC;;EAED;EACA,MAAMe,eAAe,GAAGC,MAAM,IAAI;IAChC,MAAMC,QAAQ,GAAGhC,KAAK,CAACiC,IAAI,CAAChB,IAAI,IAAIA,IAAI,CAACK,EAAE,KAAKS,MAAM,CAAC;IACvDhB,eAAe,CAACiB,QAAQ,CAAC;EAC3B,CAAC;EAED,oBACErC,OAAA;IAAAuC,QAAA,gBACEvC,OAAA;MAAAuC,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvBtC,KAAK,CAACoB,GAAG,CAACH,IAAI,iBACbtB,OAAA;MAAAuC,QAAA,gBACEvC,OAAA;QAAAuC,QAAA,EAAKjB,IAAI,CAACsB;MAAQ;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACxB3C,OAAA;QAAK6C,GAAG,EAAEvB,IAAI,CAACwB,GAAI;QAACC,GAAG,EAAEzB,IAAI,CAACsB;MAAS;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1C3C,OAAA;QAAQgD,OAAO,EAAEA,CAAA,KAAM3B,aAAa,CAACC,IAAI,EAAEA,IAAI,CAACO,QAAQ,CAAC,CAAC,CAAC,CAAE;QAAAU,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC7E3C,OAAA;QAAQgD,OAAO,EAAEA,CAAA,KAAMhB,aAAa,CAACV,IAAI,EAAEA,IAAI,CAACO,QAAQ,CAAC,CAAC,CAAC,CAAE;QAAAU,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAJrErB,IAAI,CAACK,EAAE;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKZ,CACN,CAAC,eAEF3C,OAAA;MAAAuC,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAIhB3C,OAAA;MAAAuC,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtB3C,OAAA;MACEiD,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,iBAAiB;MAC7BC,KAAK,EAAElC,WAAY;MACnBmC,QAAQ,EAAEC,CAAC,IAAIpB,WAAW,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,EAGDxB,YAAY,iBACXnB,OAAA;MAAAuC,QAAA,eACEvC,OAAA;QAAAuC,QAAA,GAAKpB,YAAY,CAACyB,QAAQ,EAAC,YAAU;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEvC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACxC,EAAA,CA3FED,MAAM;EAAA,QAQJJ,gBAAgB;AAAA;AAAAyD,EAAA,GARlBrD,MAAM;AA6FV,eAAeA,MAAM;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}