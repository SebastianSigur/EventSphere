{"ast":null,"code":"var _jsxFileName = \"/Users/sebastians/EventSphere/event-sphere-frontend/src/features/auth/SignUp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSignInAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { useDispatch } from 'react-redux';\nimport useTitle from \"../../hooks/useTitle\";\nimport { setCredentials } from './authSlice';\nimport { useLoginMutation } from './authApiSlice';\nimport { useAddNewUserMutation } from \"../users/UserApiSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst USER_REGEX = /^[A-z]{3,20}$/;\nconst PWD_REGEX = /^[A-z0-9!@#$%]{4,12}$/;\nconst SignUp = ({\n  onClose,\n  onOpen\n}) => {\n  _s();\n  const [addNewUser, {\n    isLoading: isLoadingUser,\n    isSuccess,\n    isError,\n    error\n  }] = useAddNewUserMutation();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [validUsername, setValidUsername] = useState(false);\n  const [password, setPassword] = useState('');\n  const [validPassword, setValidPassword] = useState(false);\n  const [login, {\n    isLoading\n  }] = useLoginMutation();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setValidUsername(USER_REGEX.test(username));\n  }, [username]);\n  useEffect(() => {\n    setValidPassword(PWD_REGEX.test(password));\n  }, [password]);\n  useEffect(() => {\n    if (isSuccess) {\n      setUsername('');\n      navigate('/');\n    }\n  }, [isSuccess, navigate]);\n  const onUsernameChanged = e => setUsername(e.target.value);\n  const onPasswordChanged = e => setPassword(e.target.value);\n  const canSave = [validUsername, validPassword].every(Boolean) && !isLoadingUser;\n  const onSaveUserClicked = async e => {\n    e.preventDefault();\n    if (canSave) {\n      await addNewUser({\n        username,\n        password\n      });\n      const {\n        accessToken\n      } = await login({\n        username,\n        password\n      }).unwrap();\n      dispatch(setCredentials({\n        accessToken\n      }));\n    }\n  };\n  const errClass = isError ? \"errmsg\" : \"offscreen\";\n  const validUserClass = !validUsername ? 'form__input--incomplete' : 'form__input';\n  const validPwdClass = !validPassword ? 'form__input--incomplete' : 'form__input';\n  const handleBackdropClick = event => {\n    if (event.target.classList.contains('my-modal')) {\n      onClose();\n    }\n  };\n  const content = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"my-modal\",\n    onClick: handleBackdropClick,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: onSaveUserClicked,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form__title-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Create an account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form__action-buttons\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"icon-button\",\n              title: \"Sign In\",\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faSignInAlt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: errClass,\n          children: \"Error is saving user:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form__label\",\n          htmlFor: \"username\",\n          children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"nowrap\",\n            children: \"[3-20 letters]\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: validUserClass,\n          id: \"username\",\n          name: \"username\",\n          type: \"text\",\n          autoComplete: \"off\",\n          value: username,\n          onChange: onUsernameChanged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form__label\",\n          htmlFor: \"password\",\n          children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"nowrap\",\n            children: \"[4-12 chars incl. !@#$%]\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: validPwdClass,\n          id: \"password\",\n          name: \"password\",\n          type: \"password\",\n          value: password,\n          onChange: onPasswordChanged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signup-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"signup-text\",\n          children: \"Already have an account?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          onClick: () => {\n            onOpen();\n            onClose();\n          },\n          className: \"signup-link\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n  return content;\n};\n_s(SignUp, \"P6Xcco+6/S62ZAP4d7dSkxkKAt8=\", false, function () {\n  return [useAddNewUserMutation, useNavigate, useLoginMutation, useDispatch];\n});\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","FontAwesomeIcon","faSignInAlt","useDispatch","useTitle","setCredentials","useLoginMutation","useAddNewUserMutation","jsxDEV","_jsxDEV","USER_REGEX","PWD_REGEX","SignUp","onClose","onOpen","_s","addNewUser","isLoading","isLoadingUser","isSuccess","isError","error","navigate","username","setUsername","validUsername","setValidUsername","password","setPassword","validPassword","setValidPassword","login","dispatch","test","onUsernameChanged","e","target","value","onPasswordChanged","canSave","every","Boolean","onSaveUserClicked","preventDefault","accessToken","unwrap","errClass","validUserClass","validPwdClass","handleBackdropClick","event","classList","contains","content","className","onClick","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","title","icon","htmlFor","id","name","type","autoComplete","onChange","_c","$RefreshReg$"],"sources":["/Users/sebastians/EventSphere/event-sphere-frontend/src/features/auth/SignUp.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSignInAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { useDispatch } from 'react-redux'\nimport useTitle from \"../../hooks/useTitle\";\nimport { setCredentials } from './authSlice'\nimport { useLoginMutation } from './authApiSlice'\nimport { useAddNewUserMutation } from \"../users/UserApiSlice\";\n\nconst USER_REGEX = /^[A-z]{3,20}$/\nconst PWD_REGEX = /^[A-z0-9!@#$%]{4,12}$/\n\nconst SignUp = ({onClose, onOpen}) => {\n\n    \n    const [addNewUser, {\n        isLoading: isLoadingUser,\n        isSuccess,\n        isError,\n        error\n    }] = useAddNewUserMutation()\n\n    const navigate = useNavigate();\n\n    const [username, setUsername] = useState('');\n    const [validUsername, setValidUsername] = useState(false);\n    const [password, setPassword] = useState('');\n    const [validPassword, setValidPassword] = useState(false);\n    const [login, { isLoading }] = useLoginMutation()\n\n    const dispatch = useDispatch()\n    useEffect(() => {\n        setValidUsername(USER_REGEX.test(username))\n    }, [username])\n\n    useEffect(() => {\n        setValidPassword(PWD_REGEX.test(password))\n    }, [password])\n\n\n    useEffect(() => {\n        if (isSuccess) {\n            setUsername('')\n            navigate('/')\n        }\n    }, [isSuccess, navigate])\n\n\n\n    const onUsernameChanged = e => setUsername(e.target.value);\n    const onPasswordChanged = e => setPassword(e.target.value);\n\n    const canSave = [validUsername, validPassword].every(Boolean) && !isLoadingUser\n\n\n    const onSaveUserClicked = async (e) => {\n        e.preventDefault()\n        if (canSave) {\n            await addNewUser({ username, password })\n            const { accessToken } = await login({ username, password }).unwrap()\n            dispatch(setCredentials({ accessToken }))\n\n\n\n        }\n    }\n    const errClass = isError ? \"errmsg\" : \"offscreen\"\n    const validUserClass = !validUsername ? 'form__input--incomplete' : 'form__input'\n    const validPwdClass = !validPassword ? 'form__input--incomplete' : 'form__input'\n\n\n    const handleBackdropClick = (event) => {\n        if (event.target.classList.contains('my-modal')) {\n            onClose();\n        }\n    };\n    const content = (\n        <div className=\"my-modal\" onClick={handleBackdropClick}>\n            <div className=\"modal-content\">\n            <form className=\"form\" onSubmit={onSaveUserClicked}>\n                <div className=\"form__title-row\">\n                    <h2>Create an account</h2>\n                    <div className=\"form__action-buttons\">\n                        <button\n                            className=\"icon-button\"\n                            title=\"Sign In\"\n                        >\n                            <FontAwesomeIcon icon={faSignInAlt} />\n                        </button>\n                    </div>\n                </div>\n                <div className={errClass} >Error is saving user:</div>\n                <label className=\"form__label\" htmlFor=\"username\">\n                    Username:<span className=\"nowrap\">[3-20 letters]</span></label>\n                <input\n                    className={validUserClass}\n                    id=\"username\"\n                    name=\"username\"\n                    type=\"text\"\n                    autoComplete=\"off\"\n                    value={username}\n                    onChange={onUsernameChanged}\n                />\n\n                <label className=\"form__label\" htmlFor=\"password\">\n                    Password:<span className=\"nowrap\">[4-12 chars incl. !@#$%]</span></label>\n                <input\n                    className={validPwdClass}\n                    id=\"password\"\n                    name=\"password\"\n                    type=\"password\"\n                    value={password}\n                    onChange={onPasswordChanged}\n                />\n            </form>\n            <div className=\"signup-section\">\n                <p className=\"signup-text\">Already have an account?</p>\n                <Link onClick={()=>{onOpen(); onClose()}} className=\"signup-link\">\n                    Sign In\n                </Link>\n            </div>\n            </div>\n        </div>\n    );\n\n    return content;\n};\n\nexport default SignUp;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}