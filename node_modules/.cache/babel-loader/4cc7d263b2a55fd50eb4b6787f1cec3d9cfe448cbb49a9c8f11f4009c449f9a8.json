{"ast":null,"code":"var _jsxFileName = \"/Users/sebastians/EventSphere/event-sphere-frontend/src/features/users/userHome.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useGetUsersQuery } from './UserApiSlice';\nimport { useParams } from 'react-router-dom';\nimport EventsList from '../events/EventsList';\nimport useAuth from \"../../hooks/useAuth\";\nimport { useUpdateUserMutation } from './UserApiSlice';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport ImageModal from './ImageModal';\nimport axios from 'axios';\nimport Dropzone from 'react-dropzone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserHome = () => {\n  _s();\n  const {\n    id: loggedInUserId\n  } = useAuth();\n  const {\n    id\n  } = useParams();\n  console.log(\"id: \", id);\n  const {\n    user\n  } = useGetUsersQuery(\"usersList\", {\n    selectFromResult: ({\n      data\n    }) => ({\n      user: data === null || data === void 0 ? void 0 : data.entities[id]\n    })\n  });\n  const [updateUser, {\n    isLoading,\n    isSuccess,\n    isError,\n    error\n  }] = useUpdateUserMutation();\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedAbout, setEditedAbout] = useState(user === null || user === void 0 ? void 0 : user.about);\n  const [showImageModal, setShowImageModal] = useState(false); // State for showing image modal\n  const [selectedImage, setSelectedImage] = useState(null); // State for the selected image\n\n  const handleEditClick = () => {\n    setIsEditing(true);\n  };\n  const handleImageClick = () => {\n    // Open the image modal\n    setShowImageModal(true);\n  };\n  const handleImageUpload = async image => {\n    // Logic to handle image upload\n    setSelectedImage(image);\n    setShowImageModal(false); // Close the modal after selecting an image\n    const formData = new FormData();\n    formData.append('image', image);\n    try {\n      fetch('https://api.imgur.com/3/image/', {\n        method: 'POST',\n        body: formData,\n        headers: {\n          Authorization: 'Client-ID e629e2e0a6a3494'\n        }\n      });\n      then(response => response.json());\n    } catch (error) {\n      console.error('Image upload error:', error);\n    }\n  };\n  const handleSaveClick = async () => {\n    // Perform the saving logic here with editedAbout\n    setIsEditing(false);\n    await updateUser({\n      id: user.id,\n      username: user.username,\n      password: user.password,\n      roles: user.roles,\n      active: user.active,\n      img: user.img,\n      about: editedAbout\n    });\n  };\n\n  // Check if id matches loggedInUserId\n  const isCurrentUser = id === loggedInUserId;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-info-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-profile\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `profile-image ${isCurrentUser && \"editable\"}`,\n          onClick: isCurrentUser ? handleImageClick : undefined,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: selectedImage || (user === null || user === void 0 ? void 0 : user.img),\n            alt: \"User Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), isCurrentUser && /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faEdit,\n            className: \"edit-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-about\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"About Me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: editedAbout,\n            onChange: e => setEditedAbout(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSaveClick,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: (user === null || user === void 0 ? void 0 : user.about.length) > 100 ? (user === null || user === void 0 ? void 0 : user.about.substring(0, 100)) + '...' : user === null || user === void 0 ? void 0 : user.about\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 29\n          }, this), isCurrentUser && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleEditClick,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ImageModal, {\n      isOpen: showImageModal,\n      onClose: () => setShowImageModal(false),\n      onImageUpload: handleImageUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-events\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Public Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EventsList, {\n        userId: id,\n        isPublic: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n_s(UserHome, \"K3cAooe2ezVbgdk2glX+q9Hy9Lc=\", false, function () {\n  return [useAuth, useParams, useGetUsersQuery, useUpdateUserMutation];\n});\n_c = UserHome;\nexport default UserHome;\nvar _c;\n$RefreshReg$(_c, \"UserHome\");","map":{"version":3,"names":["React","useState","useGetUsersQuery","useParams","EventsList","useAuth","useUpdateUserMutation","FontAwesomeIcon","faEdit","ImageModal","axios","Dropzone","jsxDEV","_jsxDEV","UserHome","_s","id","loggedInUserId","console","log","user","selectFromResult","data","entities","updateUser","isLoading","isSuccess","isError","error","isEditing","setIsEditing","editedAbout","setEditedAbout","about","showImageModal","setShowImageModal","selectedImage","setSelectedImage","handleEditClick","handleImageClick","handleImageUpload","image","formData","FormData","append","fetch","method","body","headers","Authorization","then","response","json","handleSaveClick","username","password","roles","active","img","isCurrentUser","className","children","onClick","undefined","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","icon","value","onChange","e","target","length","substring","isOpen","onClose","onImageUpload","userId","isPublic","_c","$RefreshReg$"],"sources":["/Users/sebastians/EventSphere/event-sphere-frontend/src/features/users/userHome.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useGetUsersQuery } from './UserApiSlice';\nimport { useParams } from 'react-router-dom';\nimport EventsList from '../events/EventsList';\nimport useAuth from \"../../hooks/useAuth\";\nimport { useUpdateUserMutation } from './UserApiSlice';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport ImageModal from './ImageModal';\nimport axios from 'axios';\nimport Dropzone from 'react-dropzone';\n\nconst UserHome = () => {\n    const { id: loggedInUserId } = useAuth();\n\n    const { id } = useParams();\n    console.log(\"id: \", id);\n    const { user } = useGetUsersQuery(\"usersList\", {\n        selectFromResult: ({ data }) => ({\n            user: data?.entities[id]\n        }),\n    });\n\n\n\n    const [updateUser, {\n        isLoading,\n        isSuccess,\n        isError,\n        error\n    }] = useUpdateUserMutation()\n\n\n    const [isEditing, setIsEditing] = useState(false);\n    const [editedAbout, setEditedAbout] = useState(user?.about);\n    const [showImageModal, setShowImageModal] = useState(false); // State for showing image modal\n    const [selectedImage, setSelectedImage] = useState(null); // State for the selected image\n\n    const handleEditClick = () => {\n        setIsEditing(true);\n    };\n    const handleImageClick = () => {\n        // Open the image modal\n        setShowImageModal(true);\n    };\n    const handleImageUpload = async (image) => {\n        // Logic to handle image upload\n        setSelectedImage(image);\n        setShowImageModal(false); // Close the modal after selecting an image\n        const formData = new FormData();\n        formData.append('image', image); \n        try {\n          \n            fetch('https://api.imgur.com/3/image/', {\n                method: 'POST',\n                body: formData,\n                headers: {\n                    Authorization: 'Client-ID e629e2e0a6a3494'\n                }\n                    \n            })\n            then(\n                response => response.json()\n            )\n            \n        } catch (error) {\n            console.error('Image upload error:', error);\n        }\n    };\n\n\n    const handleSaveClick = async  () => {\n        // Perform the saving logic here with editedAbout\n        setIsEditing(false);\n        await updateUser({\n            id: user.id,\n            username: user.username, \n            password: user.password, \n            roles:user.roles, \n            active: user.active, \n            img: user.img, \n            about: editedAbout})\n    };\n    \n    // Check if id matches loggedInUserId\n    const isCurrentUser = id === loggedInUserId;\n\n    return (\n        <div className=\"user-container\">\n            <div className=\"user-info-container\">\n                <div className=\"user-profile\">\n                    <div\n                        className={`profile-image ${isCurrentUser && \"editable\"}`}\n                        onClick={isCurrentUser ? handleImageClick : undefined}\n                    >\n                        <img src={selectedImage || user?.img} alt=\"User Profile\" />\n                        {isCurrentUser && <FontAwesomeIcon icon={faEdit} className=\"edit-icon\" />}\n                    </div>\n                </div>\n                <div className=\"user-about\">\n                    <h3>About Me</h3>\n                    {isEditing ? (\n                        <div>\n                            <textarea\n                                value={editedAbout}\n                                onChange={(e) => setEditedAbout(e.target.value)}\n                            />\n                            <button onClick={handleSaveClick}>Save</button>\n                        </div>\n                    ) : (\n                        <div>\n                            <p>\n                                {user?.about.length > 100\n                                    ? user?.about.substring(0, 100) + '...'\n                                    : user?.about}\n                            </p>\n                            {isCurrentUser && (\n                                <button onClick={handleEditClick}>Edit</button>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n            <ImageModal\n                isOpen={showImageModal}\n                onClose={() => setShowImageModal(false)}\n                onImageUpload={handleImageUpload}\n            />\n            <div className=\"user-events\">\n                <h3>Public Events</h3>\n                <EventsList userId={id} isPublic={true} />\n            </div>\n        </div>\n    );\n};\n\nexport default UserHome;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}